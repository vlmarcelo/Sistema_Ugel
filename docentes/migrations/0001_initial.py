# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2016-08-17 09:52
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('estados_civiles', '0002_auto_20160712_0001'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('tipos_personas', '0002_auto_20160712_0001'),
        ('grupos_sanguineos', '0002_auto_20160712_0001'),
        ('entidades', '0004_auto_20160721_1134'),
        ('idiomas', '0001_initial'),
        ('tipos_docentes', '0002_auto_20160712_0001'),
        ('cargos', '0002_auto_20160712_0001'),
        ('profesiones', '0002_auto_20160712_0001'),
        ('documentos_identificaciones', '0002_auto_20160712_0001'),
        ('grados_instrucciones', '0002_auto_20160712_0001'),
        ('distritos', '0003_auto_20160712_0001'),
        ('zonas', '0001_initial'),
        ('ocupaciones', '0002_auto_20160712_0001'),
        ('vias', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Docente',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('apellido_paterno', models.CharField(db_index=True, help_text='Escribir apellido paterno.', max_length=255)),
                ('apellido_materno', models.CharField(db_index=True, help_text='Escribir apellido materno.', max_length=255)),
                ('nombre', models.CharField(db_index=True, help_text='Escribir nombre(s).', max_length=255)),
                ('numero_documento_identificacion', models.CharField(db_index=True, help_text='Escribir n\xfamero documento identificaci\xf3n.', max_length=30, unique=True, verbose_name='N\xfamero Documento identificaci\xf3n')),
                ('fecha_nacimiento', models.DateField(default='01/01/1980')),
                ('genero', models.BooleanField(choices=[(True, 'Masculino'), (False, 'Femenino')], default=True, verbose_name='G\xe9nero')),
                ('fotografia', models.ImageField(blank=True, default='default/No-Image-1.png', help_text='Subir fotografia (Opcional).', null=True, upload_to='fotografia', verbose_name='Fotograf\xeda')),
                ('hijo', models.BooleanField(choices=[(True, 'Si'), (False, 'No')], default=False, verbose_name='\xbfHijo(s)?')),
                ('numero_hijo', models.PositiveSmallIntegerField(default=0, help_text='Escribir n\xfamero(s) de hijo(s).')),
                ('observacion_persona', models.TextField(blank=True, help_text='Escribir observaci\xf3n de la persona (Opcional).')),
                ('nombre_direccion', models.CharField(help_text='Escribir nombre de la direcci\xf3n.', max_length=255)),
                ('edificio', models.CharField(blank=True, max_length=20, null=True)),
                ('departamento', models.CharField(blank=True, max_length=20, null=True)),
                ('apartamento', models.CharField(blank=True, max_length=20, null=True)),
                ('pabellon', models.CharField(blank=True, max_length=20, null=True)),
                ('bloque', models.CharField(blank=True, max_length=20, null=True)),
                ('piso', models.CharField(blank=True, max_length=20, null=True)),
                ('interior', models.CharField(blank=True, max_length=20, null=True)),
                ('pasadizo', models.CharField(blank=True, max_length=20, null=True)),
                ('numero', models.CharField(blank=True, max_length=20, null=True)),
                ('cuadra', models.CharField(blank=True, max_length=20, null=True)),
                ('manzana', models.CharField(blank=True, max_length=20, null=True)),
                ('etapa', models.CharField(blank=True, max_length=20, null=True)),
                ('lote', models.CharField(blank=True, max_length=20, null=True)),
                ('sub_lote', models.CharField(blank=True, max_length=20, null=True)),
                ('sector', models.CharField(blank=True, max_length=20, null=True)),
                ('kilometro', models.CharField(blank=True, max_length=20, null=True)),
                ('denominacion', models.CharField(blank=True, help_text='Escribir denominaci\xf3n (Opcional).', max_length=255, null=True)),
                ('referencia', models.CharField(blank=True, help_text='Escribir referencia (Opcional).', max_length=255, null=True)),
                ('observacion_direccion', models.CharField(blank=True, help_text='Escribir observaci\xf3n de la direcci\xf3n (Opcional).', max_length=255, null=True)),
                ('telefono_personal', models.CharField(blank=True, help_text='Escribir n\xfamero de tel\xe9fono personal (Opcional).', max_length=30, null=True)),
                ('celular_personal', models.CharField(blank=True, help_text='Escribir n\xfamero de celular personal (Opcional).', max_length=30, null=True)),
                ('email_personal', models.EmailField(blank=True, help_text='Escribir E-Mail (Opcional).', max_length=255, null=True)),
                ('ano_experiencia', models.PositiveSmallIntegerField(default=0, help_text='Escribir a\xf1o(s) de experiencia(s).')),
                ('ano_experiencia_docente', models.PositiveSmallIntegerField(default=0, help_text='Escribir a\xf1o(s) de experiencia(s) como docente.')),
                ('ano_experiencia_docente_materia', models.PositiveSmallIntegerField(default=0, help_text='Escribir a\xf1o(s) de experiencia(s) como docente en materia.')),
                ('email_corporativo', models.EmailField(blank=True, help_text='Escribir E-Mail Corporativo.', max_length=255, null=True)),
                ('fecha_inicio_contratacion', models.DateField(help_text='Seleccionar fecha de inicio de contrataci\xf3n del empleado.')),
                ('fecha_fin_contratacion', models.DateField(blank=True, help_text='Seleccionar fecha de final de contrataci\xf3n del empleado.', null=True)),
                ('fecha_cese', models.DateTimeField(blank=True, help_text='Seleccionar fecha de cese del empleado.', null=True)),
                ('descripcion', models.TextField(blank=True, help_text='Escribir descripci\xf3n del empleado (Opcional).', null=True)),
                ('observacion', models.TextField(blank=True, help_text='Escribir observaci\xf3n del empleado (Opcional).', null=True)),
                ('asignacion', models.TextField(blank=True, null=True)),
                ('slug', models.SlugField(editable=False, max_length=255, unique=True)),
                ('fecha_registro', models.DateTimeField(auto_now_add=True)),
                ('fecha_ultima_actualizacion', models.DateTimeField(auto_now=True)),
                ('nombre_host', models.CharField(max_length=255)),
                ('direccion_ip', models.GenericIPAddressField(validators=[django.core.validators.validate_ipv46_address])),
                ('cargo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cargos.Cargo')),
                ('distrito', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='docentes_docente_related', to='distritos.Distrito')),
                ('documento_identificacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='docentes_docente_related', to='documentos_identificaciones.DocumentoIdentificacion', verbose_name='Documento identificaci\xf3n')),
                ('entidad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='entidades.Entidad')),
                ('estado_civil', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='docentes_docente_related', to='estados_civiles.EstadoCivil')),
                ('grado_instruccion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grados_instrucciones.GradoInstruccion')),
                ('grupo_sanguineo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='docentes_docente_related', to='grupos_sanguineos.GrupoSanguineo', verbose_name='Grupo sangu\xedneo')),
                ('idioma', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='idiomas.Idioma')),
                ('ocupacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ocupaciones.Ocupacion')),
                ('profesion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='profesiones.Profesion')),
                ('tipo_docente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tipos_docentes.TipoDocente')),
                ('tipo_persona', models.ForeignKey(default=1, help_text='Seleccionar tipo de persona.', on_delete=django.db.models.deletion.CASCADE, related_name='docentes_docente_related', to='tipos_personas.TipoPersona')),
                ('ultimo_usuario_editor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='empleado_usuario_editor', to=settings.AUTH_USER_MODEL)),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('usuario_creador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='empleado_usuario_creador', to=settings.AUTH_USER_MODEL)),
                ('via', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='docentes_docente_related', to='vias.Via')),
                ('zona', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='docentes_docente_related', to='zonas.Zona')),
            ],
            options={
                'ordering': ('id',),
                'db_table': 'Docentes',
                'verbose_name': 'Docente',
                'verbose_name_plural': 'Docentes',
            },
        ),
    ]
